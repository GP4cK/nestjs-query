<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tripss.github.io/nestjs-query/blog</id>
    <title>Nestjs-query Blog</title>
    <updated>2020-05-13T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tripss.github.io/nestjs-query/blog"/>
    <subtitle>Nestjs-query Blog</subtitle>
    <icon>https://tripss.github.io/nestjs-query/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[v0.11.2]]></title>
        <id>/2020/05/13/v0.11.2</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/05/13/v0.11.2"/>
        <updated>2020-05-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@InjectAssemblerQueryService]]></summary>
        <content type="html"><![CDATA[<h2><code>@InjectAssemblerQueryService</code></h2><p>In <code>v0.11.1</code> a new <code>@InjectAssemblerQueryService</code> decorator has been introduced to reduce boiler plate code related to creating an <code>AssemblerQueryService</code>.</p><h3>Example</h3><p>Define your assembler</p><pre><code class="language-ts" metastring="title=&quot;todo-item.assembler.ts&quot;" title="&quot;todo-item.assembler.ts&quot;">import { Assembler, ClassTransformerAssembler } from &#x27;@ptc-org/nestjs-query-core&#x27;;
import { TodoItemDTO } from &#x27;./todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Assembler(TodoItemDTO, TodoItemEntity)
export class TodoItemAssembler extends ClassTransformerAssembler&lt;TodoItemDTO, TodoItemEntity&gt; {
  convertToDTO(entity: TodoItemEntity): TodoItemDTO {
    const dto = super.convertToDTO(entity);
    dto.age = Date.now() - entity.created.getMilliseconds();
    return dto;
  }
}

</code></pre><p>Now, instead of defining an <code>AssemblerQueryService</code> you can use the decorator.</p><pre><code class="language-ts" metastring="title=&quot;todo-item.resolver.ts&quot; {8}" title="&quot;todo-item.resolver.ts&quot;">import { QueryService, InjectAssemblerQueryService } from &#x27;@ptc-org/nestjs-query-core&#x27;;
import { CRUDResolver } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { Resolver } from &#x27;@nestjs/graphql&#x27;;
import { TodoItemDTO } from &#x27;./dto/todo-item.dto&#x27;;

@Resolver(() =&gt; TodoItemDTO)
export class TodoItemResolver extends CRUDResolver(TodoItemDTO) {
  constructor(@InjectAssemblerQueryService(TodoItemAssembler) readonly service: QueryService&lt;TodoItemDTO&gt;) {
    super(service);
  }
}
</code></pre><h2>Using Assemblers in auto-generated Resolver</h2><p>There is a new <code>AssemblerClass</code> option when using the <code>NestjsQueryGraphQLModule</code> to generate your resolver to using a custom <code>Assembler</code>.</p><p>:::note
When using the AssemblerClass option you don&#x27;t need to specify the entity.
:::</p><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot; {12-13,17-18}" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryGraphQLModule } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { NestjsQueryTypeOrmModule } from &#x27;@ptc-org/nestjs-query-typeorm&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemDTO } from &#x27;./dto/todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;
import { TodoItemAssembler } from &#x27;./todo-item.assembler&#x27;;

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],
      // Register the assembler
      assemblers: [TodoItemAssembler],
      resolvers: [
        {
          DTOClass: TodoItemDTO,
          // specify the assembler type to use.
          AssemblerClass: TodoItemAssembler,
        },
      ],
    }),
  ],
})
export class TodoItemModule {}

</code></pre><h2>Using Services in auto-generated Resolver</h2><p>There is a new <code>ServiceClass</code> option when using the <code>NestjsQueryGraphQLModule</code> to generate your resolver to a custom <code>QueryService</code>.</p><p>:::note
When using the ServiceClass option you don&#x27;t need to specify the entity.
:::</p><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot; {12-13,17-18}" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryGraphQLModule } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { NestjsQueryTypeOrmModule } from &#x27;@ptc-org/nestjs-query-typeorm&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemDTO } from &#x27;./dto/todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;
import { TodoItemService } from &#x27;./todo-item.service&#x27;;

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],
      // Register the the custom QueryService
      services: [TodoItemService],
      resolvers: [
        {
          DTOClass: TodoItemDTO,
          // specify the QueryService type to use.
          ServiceClass: TodoItemService,
        },
      ],
    }),
  ],
})
export class TodoItemModule {}
</code></pre>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.11.0]]></title>
        <id>/2020/05/07/v0.11.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/05/07/v0.11.0"/>
        <updated>2020-05-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[@InjectQueryService]]></summary>
        <content type="html"><![CDATA[<h3><code>@InjectQueryService</code></h3><p>In <code>v0.11.x</code> an new decorator was added <code>@InjectQueryService</code>, this decorator replaces the ORM specific decorators:</p><ul><li><code>@InjectTypeOrmQueryService</code></li><li><code>@InjectSequelizeQueryService</code></li></ul><p>To migrate replace all <code>@InjectTypeOrmQueryService</code> and <code>@InjectSequelizeQueryService</code> with <code>@InjectQueryService</code>.</p><p>:::note
You still need to import the <code>NestjsQueryTypeOrmModule</code> or <code>NestjsQuerySequelizeModule</code> to use <code>@InjectQueryService</code>.
:::</p><pre><code class="language-ts">import { QueryService, InjectQueryService } from &#x27;@ptc-org/nestjs-query-core&#x27;;
import { CRUDResolver } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { Resolver } from &#x27;@nestjs/graphql&#x27;;
import { TodoItemDTO } from &#x27;./dto/todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Resolver(() =&gt; TodoItemDTO)
export class TodoItemResolver extends CRUDResolver(TodoItemDTO) {
  constructor(@InjectQueryService(TodoItemEntity) readonly service: QueryService&lt;TodoItemEntity&gt;) {
    super(service);
  }
}
</code></pre><h2>Relation Decorators</h2><p>In <code>v0.11.x</code> two new decorators were introduced from the <code>@ptc-org/nestjs-query-graphql</code> package. The <code>@Relation</code> and <code>@Connection</code> allow specifying relations on the DTO rather than passing them in as options to the <code>CRUDResolver</code>.</p><h3>@Relation</h3><p>The <code>@Relation</code> decorator allow specifying a single relation (e.g. one-to-one, many-to-one).</p><p>In this example we add a relation for a <code>todoItem</code>.</p><pre><code class="language-ts" metastring="{6}">import { FilterableField, Relation } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { ObjectType, ID, GraphQLISODateTime } from &#x27;@nestjs/graphql&#x27;;
import { TodoItemDTO } from &#x27;../todo-item/todo-item.dto.ts&#x27;;

@ObjectType(&#x27;SubTask&#x27;)
@Relation(&#x27;todoItem&#x27;, () =&gt; TodoItemDTO, { disableRemove: true })
export class SubTaskDTO {
  @FilterableField(() =&gt; ID)
  id!: string;

  @FilterableField()
  title!: string;

  @FilterableField()
  completed!: boolean;

  @FilterableField(() =&gt; GraphQLISODateTime)
  created!: Date;

  @FilterableField(() =&gt; GraphQLISODateTime)
  updated!: Date;

  @FilterableField()
  todoItemId!: string;
}
</code></pre><h3>@Connection</h3><p>The <code>@Connection</code> decorator allow specifying a connection relation (e.g. many-to-many, one-to-many).</p><p>In this example we add a connection for <code>subTasks</code>.</p><pre><code class="language-ts" metastring="{6}">import { FilterableField, Connection } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { ObjectType, ID, GraphQLISODateTime } from &#x27;@nestjs/graphql&#x27;;
import { SubTaskDTO } from &#x27;../sub-task/sub-task.dto&#x27;

@ObjectType(&#x27;TodoItem&#x27;)
@Connection(&#x27;subTasks&#x27;, () =&gt; SubTaskDTO, { disableRemove: true })
export class TodoItemDTO {
  @FilterableField(() =&gt; ID)
  id!: string;

  @FilterableField()
  title!: string;

  @FilterableField()
  completed!: boolean;

  @FilterableField(() =&gt; GraphQLISODateTime)
  created!: Date;

  @FilterableField(() =&gt; GraphQLISODateTime)
  updated!: Date;
}
</code></pre><h2>Auto Generated Resolvers</h2><p>In <code>v0.11.x</code> the <code>@nestjs-query/query-graph</code> package is now able to automatically create your resolvers.</p><p>To start using this feature update your module to import the <code>NestjsQueryGraphQLModule</code></p><p>:::note
When used with the new relation decorators, you can remove a lot of boiler plate.
:::</p><div groupId="orm" values="[object Object],[object Object]"><div value="typeorm"><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot;" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryGraphQLModule } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { NestjsQueryTypeOrmModule } from &#x27;@ptc-org/nestjs-query-typeorm&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemDTO } from &#x27;./todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],
      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],
    }),
  ],
})
export class TodoItemModule {}
</code></pre></div><div value="sequelize"><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot;" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryGraphQLModule } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { NestjsQuerySequelizeModule } from &#x27;@ptc-org/nestjs-query-sequelize&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemDTO } from &#x27;./todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQuerySequelizeModule.forFeature([TodoItemEntity])],
      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],
    }),
  ],
})
export class TodoItemModule {}
</code></pre></div></div><p>Once you have updated your module you can remove the old resolver.</p><p>:::note
Be sure to add the <code>NestjsQueryTypeOrmModule</code> or <code>NestjsQuerySequelizeModule</code> to the imports in <code>NestjsQueryGraphQLModule</code>.
:::</p><p>To read more about the auto-generated resolvers check out the <a href="/docs/graphql/resolvers">resolvers docs</a></p><h3>Example</h3><h4>Previously</h4><pre><code class="language-ts" metastring="title=&quot;todo-item.resolver.ts&quot;" title="&quot;todo-item.resolver.ts&quot;">import { QueryService, InjectQueryService } from &#x27;@ptc-org/nestjs-query-core&#x27;;
import { CRUDResolver } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { Resolver } from &#x27;@nestjs/graphql&#x27;;
import { TodoItemInputDTO } from &#x27;./todo-item.input&#x27;;
import { TodoItemDTO } from &#x27;./todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Resolver()
export class TodoItemResolver extends CRUDResolver(TodoItemDTO) {
  constructor(
      @InjectQueryService(TodoItemEntity) readonly service: QueryService&lt;TodoItemEntity&gt;
  ) {
    super(service);
  }
}
</code></pre><div groupId="orm" values="[object Object],[object Object]"><div value="typeorm"><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot;" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryTypeOrmModule } from &#x27;@ptc-org/nestjs-query-typeorm&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;
import { TodoItemResolver } from &#x27;./todo-item.resolver&#x27;;

@Module({
  providers: [TodoItemResolver],
  imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],
})
export class TodoItemModule {}

</code></pre></div><div value="sequelize"><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot;" title="&quot;todo-item.module.ts&quot;">import { NestjsQuerySequelizeModule } from &#x27;@ptc-org/nestjs-query-sequelize&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;
import { TodoItemResolver } from &#x27;./todo-item.resolver&#x27;;

@Module({
  providers: [TodoItemResolver],
  imports: [NestjsQuerySequelizeModule.forFeature([TodoItemEntity])],
})
export class TodoItemModule {}

</code></pre></div></div><h4>New</h4><div groupId="orm" values="[object Object],[object Object]"><div value="typeorm"><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot;" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryGraphQLModule } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { NestjsQueryTypeOrmModule } from &#x27;@ptc-org/nestjs-query-typeorm&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemDTO } from &#x27;./todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],
      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],
    }),
  ],
})
export class TodoItemModule {}
</code></pre></div><div value="sequelize"><pre><code class="language-ts" metastring="title=&quot;todo-item.module.ts&quot;" title="&quot;todo-item.module.ts&quot;">import { NestjsQueryGraphQLModule } from &#x27;@ptc-org/nestjs-query-graphql&#x27;;
import { NestjsQuerySequelizeModule } from &#x27;@ptc-org/nestjs-query-sequelize&#x27;;
import { Module } from &#x27;@nestjs/common&#x27;;
import { TodoItemDTO } from &#x27;./todo-item.dto&#x27;;
import { TodoItemEntity } from &#x27;./todo-item.entity&#x27;;

@Module({
  imports: [
    NestjsQueryGraphQLModule.forFeature({
      imports: [NestjsQuerySequelizeModule.forFeature([TodoItemEntity])],
      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],
    }),
  ],
})
export class TodoItemModule {}
</code></pre></div></div>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.6]]></title>
        <id>/2020/04/22/v0.8.6</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/22/v0.8.6"/>
        <updated>2020-04-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* chore(renovate): Renovate to include examples]]></summary>
        <content type="html"><![CDATA[<ul><li>chore(renovate): Renovate to include examples</li><li>chore(renovate): Renovate set ignorePaths to empty</li><li>fix(deps): pin dependencies</li><li>chore(deps): Update package-lock.json</li><li>chore(deps): Update postgres backing app to 11.7</li><li>docs(): Update Federation Docs</li><li>chore(lerna): add hoist to lerna.json</li><li>chore(deps): update dependency @nestjs/graphql to v7.3.4</li><li>chore(deps): update dependency @types/node to v13.13.2</li><li>chore(renovate): Update to automerge devDeps</li><li>chore(deps): update dependency coveralls to v3.0.13</li><li>chore(deps): update dependency eslint-config-prettier to v6.11.0</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.5]]></title>
        <id>/2020/04/21/v0.8.5</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/21/v0.8.5"/>
        <updated>2020-04-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* feat(graphql): basic federation support.]]></summary>
        <content type="html"><![CDATA[<ul><li>feat(graphql): basic federation support. </li><li>docs(graphql): federation docs.</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.4]]></title>
        <id>/2020/04/16/v0.8.4</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/16/v0.8.4"/>
        <updated>2020-04-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* docs(typeorm): Call out foreign keys in entity and DTO #84]]></summary>
        <content type="html"><![CDATA[<ul><li>docs(typeorm): Call out foreign keys in entity and DTO <a href="https://github.com/tripss/nestjs-query/issues/84">#84</a></li><li>docs(typeorm): Relations on an entity/dto <a href="https://github.com/tripss/nestjs-query/issues/85">#85</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.2]]></title>
        <id>/2020/04/15/v0.8.2</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/15/v0.8.2"/>
        <updated>2020-04-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* [TESTS] Updated graphql types tests to check schema rather than spies.]]></summary>
        <content type="html"><![CDATA[<ul><li>[TESTS]<!-- --> Updated graphql types tests to check schema rather than spies.</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.3]]></title>
        <id>/2020/04/15/v0.8.3</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/15/v0.8.3"/>
        <updated>2020-04-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* FIXED]  Add support for extending abstract object types [#82]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- -->  Add support for extending abstract object types <a href="https://github.com/tripss/nestjs-query/issues/82">#82</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.1]]></title>
        <id>/2020/04/08/v0.8.1</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/08/v0.8.1"/>
        <updated>2020-04-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* FIXED] Mysql error "LIMIT in subquery" [#77]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Mysql error &quot;LIMIT in subquery&quot; <a href="https://github.com/tripss/nestjs-query/issues/77">#77</a><ul><li>Changed <code>nestjs-query/query-typeorm</code> to not use subqueries to fetch relations.</li></ul></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.8.0]]></title>
        <id>/2020/04/07/v0.8.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/07/v0.8.0"/>
        <updated>2020-04-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* FIXED] Defining additional UpdateDtos breaks Schema. [#72]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Defining additional UpdateDtos breaks Schema. <a href="https://github.com/tripss/nestjs-query/issues/72">#72</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.7.5]]></title>
        <id>/2020/04/03/v0.7.5</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/03/v0.7.5"/>
        <updated>2020-04-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* [FIXED] Tables with composite primary keys are not quoted properly.]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Tables with composite primary keys are not quoted properly.</li><li>[DOCS]<!-- --> Added docs for working with multiple connections <a href="https://github.com/tripss/nestjs-query/pull/73">#73</a> - <a href="https://github.com/johannesschobel">@johannesschobel</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.7.4]]></title>
        <id>/2020/04/02/v0.7.4</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/04/02/v0.7.4"/>
        <updated>2020-04-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* [FIXED] code formatting]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> code formatting</li><li>Update root package.json with common dependencies</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.7.3]]></title>
        <id>/2020/03/28/v0.7.3</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/03/28/v0.7.3"/>
        <updated>2020-03-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* DOCS] Update docs to include a complete example of custom methods [#64]]></summary>
        <content type="html"><![CDATA[<ul><li>[DOCS]<!-- --> Update docs to include a complete example of custom methods <a href="https://github.com/tripss/nestjs-query/issues/64">#64</a></li><li>[FIXED]<!-- --> Issue where creating or updating allows specifying primary keys <a href="https://github.com/tripss/nestjs-query/issues/65">#65</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.7.2]]></title>
        <id>/2020/03/27/v0.7.2</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/03/27/v0.7.2"/>
        <updated>2020-03-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* [FIXED] Issue where update input DTO was not automatically created]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Issue where update input DTO was not automatically created</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.7.1]]></title>
        <id>/2020/03/25/v0.7.1</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/03/25/v0.7.1"/>
        <updated>2020-03-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* [FIXED] Issue where update input DTO was not automatically created]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Issue where update input DTO was not automatically created</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.7.0]]></title>
        <id>/2020/03/18/v0.7.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/03/18/v0.7.0"/>
        <updated>2020-03-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Updated to @nestjs/graphql v7.x.]]></summary>
        <content type="html"><![CDATA[<ul><li>Updated to <code>@nestjs/graphql</code> <code>v7.x</code>.<ul><li>This was a passive change for the library usage however you should still follow the migration guide <a href="https://docs.nestjs.com/migration-guide">found here</a></li></ul></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.6.0]]></title>
        <id>/2020/03/08/v0.6.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/03/08/v0.6.0"/>
        <updated>2020-03-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* FIXED] Get Underlying Entity Object [#41]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Get Underlying Entity Object <a href="https://github.com/tripss/nestjs-query/issues">#41</a><ul><li>Changed <code>TypeOrmQueryService</code> to operate on the <code>Entity</code></li><li>Added new <code>AssemblerQueryService</code> to translate between the <code>DTO</code> and <code>Entity</code></li></ul></li><li>[ADDED]<!-- --> New <code>InjectTypeOrmQueryService</code> decorator to auto-create a TypeOrm query service.</li></ul><p>See the <a href="/docs/migration-guides/v0.5.x-to-v0.6.x">migration guide</a> for a more in-depth review of the changes.</p>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.5.1]]></title>
        <id>/2020/03/02/v0.5.1</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/03/02/v0.5.1"/>
        <updated>2020-03-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* DOCS] Added clarification around individual resolvers and relations with examples [#42]]></summary>
        <content type="html"><![CDATA[<ul><li>[DOCS]<!-- --> Added clarification around individual resolvers and relations with examples <a href="https://github.com/tripss/nestjs-query/issues/42">#42</a></li><li>[ADDED]<!-- --> Exposed <code>Relatable</code> mixin from <code>@nestjs-query/graphql</code> <a href="https://github.com/tripss/nestjs-query/issues/42">#42</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.4.0]]></title>
        <id>/2020/02/25/v0.4.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/25/v0.4.0"/>
        <updated>2020-02-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Updated all mutations to take a single input argument with custom fields.]]></summary>
        <content type="html"><![CDATA[<ul><li>Updated all mutations to take a single <code>input</code> argument with custom fields.<ul><li><code>createOne(input: DTO)</code> -&gt; <code>createOne(input: { [dtoName]: DTO })</code></li><li><code>createMany(input: DTO[])</code> -&gt; <code>createOne(input: { [pluralDTOName]: DTO[] })</code></li><li><code>updateOne(id: ID, input: UpdateDTO)</code> -&gt; <code>createOne(input: { id: ID, update: UpdateDTO })</code></li><li><code>updateMany(filter: Filter&lt;DTO&gt;, input: UpdateDTO)</code> -&gt; <code>createOne(input: { filter: Filter&lt;DTO&gt;, update: UpdateDTO })</code></li><li><code>deleteOne(input: ID)</code> -&gt; <code>deleteOne(input: {id: ID})</code></li><li><code>deleteMany(input: Filter&lt;DTO&gt;)</code> -&gt; <code>createOne(input: { filter: Filter&lt;DTO&gt; })</code></li></ul></li><li>Updated docs to reflect changes.</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.5.0]]></title>
        <id>/2020/02/25/v0.5.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/25/v0.5.0"/>
        <updated>2020-02-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Added decorators option to resolver options to allow providing custom decorators to endpoints #36]]></summary>
        <content type="html"><![CDATA[<ul><li>Added <code>decorators</code> option to resolver options to allow providing custom decorators to endpoints <a href="https://github.com/tripss/nestjs-query/issues/36">#36</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.3.4]]></title>
        <id>/2020/02/23/v0.3.4</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/23/v0.3.4"/>
        <updated>2020-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* FIXED] Can't remove on Many-To-Many relations [#31]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Can&#x27;t remove on Many-To-Many relations <a href="https://github.com/tripss/nestjs-query/issues/31">#31</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.3.5]]></title>
        <id>/2020/02/23/v0.3.5</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/23/v0.3.5"/>
        <updated>2020-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* FIXED] Validate Input for Create & Update [#19]]></summary>
        <content type="html"><![CDATA[<ul><li>[FIXED]<!-- --> Validate Input for Create &amp; Update <a href="https://github.com/tripss/nestjs-query/issues/19">#19</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.3.2]]></title>
        <id>/2020/02/22/v0.3.2</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/22/v0.3.2"/>
        <updated>2020-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Switched to github actions]]></summary>
        <content type="html"><![CDATA[<ul><li>Switched to github actions</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.3.3]]></title>
        <id>/2020/02/22/v0.3.3</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/22/v0.3.3"/>
        <updated>2020-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Update typescript to 3.8.]]></summary>
        <content type="html"><![CDATA[<ul><li>Update typescript to 3.8.</li><li>Update dependency versions.</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.3.0]]></title>
        <id>/2020/02/21/v0.3.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/21/v0.3.0"/>
        <updated>2020-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Added dataloader support!]]></summary>
        <content type="html"><![CDATA[<ul><li>Added dataloader support!</li><li>Fixed issue with loading of many-to-many relations <a href="https://github.com/tripss/nestjs-query/issues/22">#22</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.3.1]]></title>
        <id>/2020/02/21/v0.3.1</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/21/v0.3.1"/>
        <updated>2020-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Hardened TypeORM querying]]></summary>
        <content type="html"><![CDATA[<ul><li>Hardened TypeORM querying<ul><li>Added filter for entity ids on relations to prevent querying for too many rows.</li><li>Qualify all filter and sorting columns, to prevent column name collisions.</li></ul></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.2.1]]></title>
        <id>/2020/02/18/v0.2.1</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/18/v0.2.1"/>
        <updated>2020-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Fixed case where @FilterableField decorator was not passing arguments correctly to @Field decorator #20]]></summary>
        <content type="html"><![CDATA[<ul><li>Fixed case where <code>@FilterableField</code> decorator was not passing arguments correctly to <code>@Field</code> decorator <a href="https://github.com/tripss/nestjs-query/issues/20">#20</a></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.2.0]]></title>
        <id>/2020/02/12/v0.2.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/12/v0.2.0"/>
        <updated>2020-02-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In v0.2.0 the concept of Assemblers was introduced. Assemblers allow for converting to and from a DTO/entity that have different fields or computed values.]]></summary>
        <content type="html"><![CDATA[<p>In <code>v0.2.0</code> the concept of <code>Assemblers</code> was introduced. <code>Assemblers</code> allow for converting to and from a DTO/entity that have different fields or computed values.</p><p><a href="docs/concepts/advanced/assemblers">Read More About Assemblers!</a>.</p>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.1.0]]></title>
        <id>/2020/02/05/v0.1.0</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/02/05/v0.1.0"/>
        <updated>2020-02-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[As of v0.1.0 you can specify relations in your graphql resolvers.]]></summary>
        <content type="html"><![CDATA[<p>As of <code>v0.1.0</code> you can specify relations in your graphql resolvers.</p><p><a href="docs/graphql/relations">Checkout the docs!</a></p>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.0.5]]></title>
        <id>/2020/01/28/v0.0.5</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/01/28/v0.0.5"/>
        <updated>2020-01-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Add ability to specify query defaults.]]></summary>
        <content type="html"><![CDATA[<ul><li>Add ability to specify query defaults.<ul><li><code>defaultResultSize</code> -  the default number of results to return from a query. <a href="/docs/graphql/resolvers#default-paging">See Default Paging</a></li><li><code>maxResultsSize</code> -  the maximum number of results to return from a query. <a href="/docs/graphql/resolvers#default-paging">See Default Paging</a></li><li><code>defaultSort</code> -  The default sort to apply to queries. <a href="/docs/graphql/resolvers#default-sort">See Default Sort</a></li><li><code>defaultFilter</code> -  The default filter to apply to queries. <a href="/docs/graphql/resolvers#default-filter">See Default Filter</a></li></ul></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.0.6]]></title>
        <id>/2020/01/28/v0.0.6</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/01/28/v0.0.6"/>
        <updated>2020-01-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Dont allow empty filters with updateMany or deleteMany operations.]]></summary>
        <content type="html"><![CDATA[<ul><li>Dont allow empty filters with <code>updateMany</code> or <code>deleteMany</code> operations.</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.0.2]]></title>
        <id>/2020/01/27/v0.0.2</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/01/27/v0.0.2"/>
        <updated>2020-01-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Add MIT license]]></summary>
        <content type="html"><![CDATA[<ul><li>Add MIT license</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.0.3]]></title>
        <id>/2020/01/27/v0.0.3</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/01/27/v0.0.3"/>
        <updated>2020-01-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Fix package READMEs]]></summary>
        <content type="html"><![CDATA[<ul><li>Fix package READMEs</li><li>Add security scanning on sub modules.</li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v0.0.4]]></title>
        <id>/2020/01/27/v0.0.4</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/01/27/v0.0.4"/>
        <updated>2020-01-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Add files field to @ptc-org/nestjs-query-core package.json]]></summary>
        <content type="html"><![CDATA[<ul><li>Add files field to <code>@ptc-org/nestjs-query-core</code> <code>package.json</code></li></ul>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Initial Release]]></title>
        <id>/2020/01/26/Initial Release</id>
        <link href="https://tripss.github.io/nestjs-query/blog/2020/01/26/Initial Release"/>
        <updated>2020-01-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Initial Release of nestjs-query.]]></summary>
        <content type="html"><![CDATA[<p>Initial Release of <code>nestjs-query</code>.</p><p><code>nestjs-query</code> is collection of packages to make crud for <code>graphql</code> (and potentially other transports) easier.</p><p>This library is composed of three packages.</p><ul><li><a href="https://github.com/tripss/nestjs-query/tree/master/packages/core"><code>@ptc-org/nestjs-query-core</code></a> - Defines all interfaces and utility types implemented by the other packages.</li><li><a href="https://github.com/tripss/nestjs-query/tree/master/packages/graphql"><code>@ptc-org/nestjs-query-graphql</code></a> - Package that provides the graphql resolver and decorators for crud endpoints.</li><li><a href="https://github.com/tripss/nestjs-query/tree/master/packages/typeorm"><code>@ptc-org/nestjs-query-typeorm</code></a> - Package that implements a Typeorm service that can be used by itself or with the graphql resolver provided by <code>@ptc-org/nestjs-query-graphql</code>.</li></ul><p><a href="https://tripss.github.io/nestjs-query/docs/introduction/getting-started">To read more checkout the docs</a></p>]]></content>
        <author>
            <name>Doug Martin</name>
            <uri>https://github.com/tripss</uri>
        </author>
    </entry>
</feed>